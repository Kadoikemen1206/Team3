//=============================================================================
//
// カメラ処理 [camera.cpp]
// Author : KADO TAKUMA
//
//=============================================================================
#ifndef _CAMERA_H_
#define _CAMERA_H_

//=============================================================================
// インクルードファイル
//=============================================================================
#include "main.h"

//=============================================================================
//マクロ定義
//=============================================================================
#define CAMERA_SPEED	(5.0f)		//カメラの移動速度

//=============================================================================
// クラスの定義
//=============================================================================
class CCamera
{
public:
	//-------------------------------------------------------------------------
	// コンストラクタとデストラクタ
	//-------------------------------------------------------------------------
	CCamera();
	~CCamera();

	//-------------------------------------------------------------------------
	// メンバー関数
	//-------------------------------------------------------------------------
	HRESULT Init(void);					// 初期化処理
	void Uninit(void);					// 終了処理
	void Update(void);					// 更新処理
	void SetCamera(void);				// 設定処理
	static CCamera *Create(void);		// 生成処理
	static D3DXVECTOR3 GetRot() { return m_rot; }

private:
	//-------------------------------------------------------------------------
	// メンバー変数
	//-------------------------------------------------------------------------
	D3DXVECTOR3	m_posV;				//視点
	D3DXVECTOR3	m_posR;				//注視点
	D3DXVECTOR3	m_vecU;				//上方向ベクトル
	D3DXVECTOR3	m_posVDest;			//目的の視点
	D3DXVECTOR3	m_posRDest;			//目的の注視点
	D3DXMATRIX	m_mtxProjection;	//プロジェクションマトリックス
	D3DXMATRIX	m_mtxView;			//ビューマトリックス
	float		m_fDistance;		//視点から注視点の距離

	static D3DXVECTOR3 m_rot;		//向き
};

#endif